import streamlit as st
import pandas as pd
import altair as alt

st.set_page_config(layout="wide")
st.image("https://upload.wikimedia.org/wikipedia/commons/8/87/Alfabank_logo.png", width=180)

st.title("AI Operations Dashboard ‚Äì –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫")
st.markdown("### –§–∏–Ω–∞–Ω—Å–æ–≤–æ-–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI-–ø—Ä–æ–µ–∫—Ç–∞–º–∏ (2025‚Äì2028)")

# -------------------------------
# 1. –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ò–ò (P&L-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
# -------------------------------
st.header("üìä –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ò–ò (P&L-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)")

col1, col2 = st.columns(2)

with col1:
    pnl_data = pd.DataFrame({
        "–ì–æ–¥": [2025, 2026, 2027, 2028],
        "–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å, –º–ª–Ω ‚ÇΩ": [29_146, 35_000, 42_000, 49_000],
        "–ü—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò, –º–ª–Ω ‚ÇΩ": [1_200, 2_400, 4_800, 7_200]
    })
    st.altair_chart(
        alt.Chart(pnl_data).transform_fold(
            ["–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å, –º–ª–Ω ‚ÇΩ", "–ü—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò, –º–ª–Ω ‚ÇΩ"],
            as_=["–ú–µ—Ç—Ä–∏–∫–∞", "–ó–Ω–∞—á–µ–Ω–∏–µ"]
        ).mark_bar().encode(
            x=alt.X("–ì–æ–¥:O", title="–ì–æ–¥"),
            y=alt.Y("–ó–Ω–∞—á–µ–Ω–∏–µ:Q", title="–º–ª–Ω ‚ÇΩ"),
            color="–ú–µ—Ç—Ä–∏–∫–∞:N"
        ).properties(width=500, height=300),
        use_container_width=True
    )
    with st.expander("üìå –ò–∑ —á–µ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò"):
        st.markdown("""
        - –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ü–µ–Ω—Ç—Ä (chat-–±–æ—Ç—ã, auto-reply)
        - –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ LLM
        - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ KYC/AML
        - –ü–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–∫-–æ—Ü–µ–Ω–∫–∏ –∑–∞—è–≤–æ–∫
        """)

with col2:
    economy_effect = pd.DataFrame({
        "–ì–æ–¥": [2025, 2026, 2027, 2028],
        "–≠–∫–æ–Ω–æ–º–∏—è –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ": [800, 1_500, 2_500, 4_000],
        "–î–æ–ø. –¥–æ—Ö–æ–¥ –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ": [400, 900, 2_300, 3_200]
    })
    st.altair_chart(
        alt.Chart(economy_effect).transform_fold(
            ["–≠–∫–æ–Ω–æ–º–∏—è –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ", "–î–æ–ø. –¥–æ—Ö–æ–¥ –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ"],
            as_=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ó–Ω–∞—á–µ–Ω–∏–µ"]
        ).mark_line(point=True).encode(
            x=alt.X("–ì–æ–¥:O", title="–ì–æ–¥"),
            y=alt.Y("–ó–Ω–∞—á–µ–Ω–∏–µ:Q", title="–º–ª–Ω ‚ÇΩ"),
            color="–ö–∞—Ç–µ–≥–æ—Ä–∏—è:N"
        ).properties(width=500, height=300),
        use_container_width=True
    )

# -------------------------------
# 2. –†–∞—Å—Ö–æ–¥—ã –ø–æ MECE-—Å—Ç—Ä—É–∫—Ç—É—Ä–µ
# -------------------------------
st.header("üìÇ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ AI-–ø—Ä–æ–µ–∫—Ç—ã –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ MECE")

spending = pd.DataFrame({
    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": ["–§–û–¢", "R&D", "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–æ–±–ª–∞–∫–æ, GPU)", "PM / Support / QA"],
    "2025": [3_200, 2_000, 1_200, 600],
    "2026": [3_500, 2_300, 1_400, 700]
})

st.dataframe(spending.set_index("–ö–∞—Ç–µ–≥–æ—Ä–∏—è"))

# -------------------------------
# 3. KPI –∫–æ–º–∞–Ω–¥ (–ø–ª–∞–Ω / —Ñ–∞–∫—Ç / RAG)
# -------------------------------
st.header("üìå KPI –∫–æ–º–∞–Ω–¥ (–ø–ª–∞–Ω / —Ñ–∞–∫—Ç / —Å—Ç–∞—Ç—É—Å RAG)")

kpi_data = pd.DataFrame({
    "–ö–æ–º–∞–Ω–¥–∞": ["NLP", "MLOps", "DevOps", "PM"],
    "–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": ["Precision –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏", "% CI/CD-–¥–µ–ø–ª–æ–µ–≤", "–ê–ø—Ç–∞–π–º —Å–µ—Ä–≤–∏—Å–æ–≤", "–ö–æ–ª-–≤–æ MVP –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª"],
    "–ü–ª–∞–Ω": [0.92, 0.97, 99.9, 8],
    "–§–∞–∫—Ç": [0.89, 0.95, 99.5, 6],
    "RAG": ["üü†", "üü†", "üü¢", "üî¥"]
})

st.dataframe(kpi_data)

# -------------------------------
# 4. Drill-down –¥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
# -------------------------------
st.header("üßë‚Äçüíª –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")

team_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", ["NLP", "MLOps", "DevOps", "PM"])
mock_employees = {
    "NLP": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤"],
        "Precision": [0.91, 0.93, 0.88]
    }),
    "MLOps": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–ù–æ–≤–∏–∫–æ–≤–∞", "–§—Ä–æ–ª–æ–≤"],
        "% —É—Å–ø–µ—à–Ω—ã—Ö CI/CD": [96, 94]
    }),
    "DevOps": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–û—Ä–ª–æ–≤", "–ú–æ—Ä–æ–∑–æ–≤", "–ó–∞–π—Ü–µ–≤–∞"],
        "–ê–ø—Ç–∞–π–º —Å–µ—Ä–≤–∏—Å–æ–≤, %": [99.4, 99.7, 99.5]
    }),
    "PM": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–°–µ–º–µ–Ω–æ–≤", "–ì—Ä–∏–≥–æ—Ä—å–µ–≤–∞"],
        "MVP –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª": [3, 4]
    })
}
st.table(mock_employees[team_choice])

st.markdown("---")
st.caption("¬© 2025 AI & LLM Business Dashboard –¥–ª—è –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞. –í—Å–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ (mock).")