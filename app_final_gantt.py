import streamlit as st
import pandas as pd
import altair as alt
import datetime

st.set_page_config(layout="wide")
st.image("https://upload.wikimedia.org/wikipedia/commons/8/87/Alfabank_logo.png", width=180)

st.title("AI Operations Dashboard ‚Äì –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫")
st.markdown("### –§–∏–Ω–∞–Ω—Å–æ–≤–æ-–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI-–ø—Ä–æ–µ–∫—Ç–∞–º–∏ (2025‚Äì2028)")

# -------------------------------
# 1. –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ò–ò (P&L-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
# -------------------------------
st.header("üìä –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ò–ò (P&L-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞)")

col1, col2 = st.columns(2)

with col1:
    pnl_data = pd.DataFrame({
        "–ì–æ–¥": [2025, 2026, 2027, 2028],
        "–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å, –º–ª–Ω ‚ÇΩ": [29_146, 35_000, 42_000, 49_000],
        "–ü—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò, –º–ª–Ω ‚ÇΩ": [1_200, 2_400, 4_800, 7_200]
    })
    st.altair_chart(
        alt.Chart(pnl_data).transform_fold(
            ["–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å, –º–ª–Ω ‚ÇΩ", "–ü—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò, –º–ª–Ω ‚ÇΩ"],
            as_=["–ú–µ—Ç—Ä–∏–∫–∞", "–ó–Ω–∞—á–µ–Ω–∏–µ"]
        ).mark_bar().encode(
            x=alt.X("–ì–æ–¥:O", title="–ì–æ–¥"),
            y=alt.Y("–ó–Ω–∞—á–µ–Ω–∏–µ:Q", title="–º–ª–Ω ‚ÇΩ"),
            color="–ú–µ—Ç—Ä–∏–∫–∞:N"
        ).properties(width=500, height=300),
        use_container_width=True
    )
    with st.expander("üìå –ò–∑ —á–µ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏–±—ã–ª—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ò–ò"):
        st.markdown("""
        **–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø—Ä–∏–±—ã–ª–∏ –æ—Ç –ò–ò:**
        - üí¨ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ü–µ–Ω—Ç—Ä (chat-–±–æ—Ç—ã, auto-reply)
        - üí∏ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ LLM
        - üõ°Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ KYC/AML
        - üìà –ü–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–∫-–æ—Ü–µ–Ω–∫–∏ –∑–∞—è–≤–æ–∫

        **–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –ò–ò: 6 000 –º–ª–Ω ‚ÇΩ**  
        **–°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏: ~3 –≥–æ–¥–∞**  
        **–î–æ–ª—è –ø—Ä–∏–±—ã–ª–∏ –æ—Ç –ò–ò: 4.1% –≤ 2028**
        """)

with col2:
    economy_effect = pd.DataFrame({
        "–ì–æ–¥": [2025, 2026, 2027, 2028],
        "–≠–∫–æ–Ω–æ–º–∏—è –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ": [800, 1_500, 2_500, 4_000],
        "–î–æ–ø. –¥–æ—Ö–æ–¥ –æ—Ç –ò–ò, –º–ª–Ω ‚ÇΩ": [400, 900, 2_300, 3_200]
    }).melt(id_vars=["–ì–æ–¥"], var_name="–ö–∞—Ç–µ–≥–æ—Ä–∏—è", value_name="–ó–Ω–∞—á–µ–Ω–∏–µ")

    if not economy_effect.empty:
        chart = alt.Chart(economy_effect).mark_line(point=True).encode(
            x=alt.X("–ì–æ–¥:O", title="–ì–æ–¥"),
            y=alt.Y("–ó–Ω–∞—á–µ–Ω–∏–µ:Q", title="–º–ª–Ω ‚ÇΩ"),
            color=alt.Color("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:N", title=""),
            tooltip=["–ì–æ–¥", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ó–Ω–∞—á–µ–Ω–∏–µ"]
        ).properties(width=500, height=300)
        st.altair_chart(chart, use_container_width=True)

# -------------------------------
# 2. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ (MECE)
# -------------------------------
st.header("üìÇ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ AI-–ø—Ä–æ–µ–∫—Ç—ã, –º–ª–Ω ‚ÇΩ")

with st.expander("üìå –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ MECE"):
    spending = pd.DataFrame({
        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": [
            "–§–û–¢ ‚Äî NLP (6 —á–µ–ª)", "–§–û–¢ ‚Äî MLOps (4 —á–µ–ª)", "–§–û–¢ ‚Äî DevOps (3 —á–µ–ª)", "–§–û–¢ ‚Äî PM (2 —á–µ–ª)",
            "R&D ‚Äî —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã", "R&D ‚Äî –ª–∏—Ü–µ–Ω–∑–∏–∏ LLM", "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî GPU", "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî –æ–±–ª–∞–∫–æ", "PM / Support / QA"
        ],
        "2025": [1_200, 900, 600, 300, 600, 400, 700, 500, 400],
        "2026": [1_400, 1_000, 650, 320, 700, 450, 750, 550, 450]
    })
    st.dataframe(spending.set_index("–ö–∞—Ç–µ–≥–æ—Ä–∏—è"))

# -------------------------------
# 3. KPI –∫–æ–º–∞–Ω–¥ (–ø–ª–∞–Ω / —Ñ–∞–∫—Ç / RAG)
# -------------------------------
st.header("üìå KPI –∫–æ–º–∞–Ω–¥ (–ø–ª–∞–Ω / —Ñ–∞–∫—Ç / —Å—Ç–∞—Ç—É—Å RAG)")

kpi_data = pd.DataFrame({
    "–ö–æ–º–∞–Ω–¥–∞": ["NLP", "MLOps", "DevOps", "PM"],
    "–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": ["Precision –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏", "% CI/CD-–¥–µ–ø–ª–æ–µ–≤", "–ê–ø—Ç–∞–π–º —Å–µ—Ä–≤–∏—Å–æ–≤", "–ö–æ–ª-–≤–æ MVP –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª"],
    "–ü–ª–∞–Ω": [0.92, 0.97, 99.9, 8],
    "–§–∞–∫—Ç": [0.89, 0.95, 99.5, 6],
    "RAG": ["üü†", "üü†", "üü¢", "üî¥"]
})

st.dataframe(kpi_data)

# -------------------------------
# 4. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
# -------------------------------
st.header("üßë‚Äçüíª –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")

team_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", ["NLP", "MLOps", "DevOps", "PM"])

employee_data = {
    "NLP": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤"],
        "–ü–ª–∞–Ω –∑–∞–¥–∞—á": [28, 30, 26],
        "–§–∞–∫—Ç –∑–∞–¥–∞—á": [25, 30, 28]
    }),
    "MLOps": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–ù–æ–≤–∏–∫–æ–≤–∞", "–§—Ä–æ–ª–æ–≤"],
        "–ü–ª–∞–Ω –∑–∞–¥–∞—á": [38, 36],
        "–§–∞–∫—Ç –∑–∞–¥–∞—á": [40, 35]
    }),
    "DevOps": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–û—Ä–ª–æ–≤", "–ú–æ—Ä–æ–∑–æ–≤", "–ó–∞–π—Ü–µ–≤–∞"],
        "–ü–ª–∞–Ω –∑–∞–¥–∞—á": [20, 20, 23],
        "–§–∞–∫—Ç –∑–∞–¥–∞—á": [20, 18, 25]
    }),
    "PM": pd.DataFrame({
        "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": ["–°–µ–º–µ–Ω–æ–≤", "–ì—Ä–∏–≥–æ—Ä—å–µ–≤–∞"],
        "–ü–ª–∞–Ω –∑–∞–¥–∞—á": [12, 10],
        "–§–∞–∫—Ç –∑–∞–¥–∞—á": [10, 12]
    })
}

df = employee_data[team_choice]
df["–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ, %"] = (df["–§–∞–∫—Ç –∑–∞–¥–∞—á"] / df["–ü–ª–∞–Ω –∑–∞–¥–∞—á"] * 100).round(1)
df = df.sort_values("–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ, %", ascending=False).reset_index(drop=True)

st.dataframe(df)

# -------------------------------
# 5. –ü–ª–∞–Ω-–≥—Ä–∞—Ñ–∏–∫ (Gantt)
# -------------------------------
st.header("üìÖ –ü–ª–∞–Ω-–≥—Ä–∞—Ñ–∏–∫ AI-–ø—Ä–æ–µ–∫—Ç–æ–≤ (Gantt Chart)")

gantt_data = pd.DataFrame({
    "–ü—Ä–æ–µ–∫—Ç": ["–ó–∞–ø—É—Å–∫ —á–∞—Ç-–±–æ—Ç–∞", "–ú–æ–¥–µ–ª—å –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞", "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è CI/CD", "LLM –≤ –ö–¶", "–û–±–ª–∞—á–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è"],
    "–ù–∞—á–∞–ª–æ": [datetime.date(2025, 1, 15), datetime.date(2025, 2, 10), datetime.date(2025, 3, 1),
               datetime.date(2025, 3, 20), datetime.date(2025, 4, 5)],
    "–û–∫–æ–Ω—á–∞–Ω–∏–µ": [datetime.date(2025, 2, 28), datetime.date(2025, 4, 1), datetime.date(2025, 4, 10),
                  datetime.date(2025, 6, 1), datetime.date(2025, 6, 30)]
})

gantt_chart = alt.Chart(gantt_data).mark_bar().encode(
    x='–ù–∞—á–∞–ª–æ:T',
    x2='–û–∫–æ–Ω—á–∞–Ω–∏–µ:T',
    y=alt.Y('–ü—Ä–æ–µ–∫—Ç:N', sort=None),
    color=alt.value("#007BFF")
).properties(height=300)

st.altair_chart(gantt_chart, use_container_width=True)

st.markdown("---")
st.caption("¬© 2025 AI & LLM Business Dashboard –¥–ª—è –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞. –í—Å–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ (mock).")